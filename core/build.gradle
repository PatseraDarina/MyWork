javaProject()

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE")
        // import asciidoctor gradle plugin
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.2")
        // import asciidoctor pdf plugin
        classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.16")
    }
}

configurations {
    // adding jsondoclet configuration
    jsondoclet
}

ext {
    // define path for json javadocs
    javadocJsonDir = file("$buildDir/generated-javadoc-json")
    // define path for genereted snippets via asciidoc container resources
    snippetsDir = file("$buildDir/generated-snippets")
}

apply plugin: 'war'
// a Gradle plugin that uses Asciidoctor via JRuby to process AsciiDoc source files within the project
apply plugin: 'org.asciidoctor.convert'

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.5.10.RELEASE'

    runtime('org.hsqldb:hsqldb')
    runtime('org.postgresql:postgresql')
    
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    // dependency for REST docs test
    testCompile group: 'capital.scalable', name: 'spring-auto-restdocs-core', version: '1.0.11'
    // dependency for json doclet configuration
    jsondoclet "capital.scalable:spring-auto-restdocs-json-doclet:1.0.11"
    testCompile "org.springframework.restdocs:spring-restdocs-core:2.0.0.RELEASE"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:2.0.0.RELEASE"
}

//----- START Configuration Spring REST Docs
task jsonDoclet(type: Javadoc, dependsOn: compileJava) {
    // the source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist
    // TO DO need packages core and controller
    source = sourceSets.main.allJava
    // the classpath to use to resolve type references in the source code
    classpath = sourceSets.main.compileClasspath
    // the directory to generate the documentation into path
    destinationDir = javadocJsonDir
    // set doclet path
    options.docletpath = configurations.jsondoclet.files.asType(List)
    // resource for exporting JavaDoc to JSON for Spring Auto REST Docs
    options.doclet = 'capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet'
    // level of javadoc
    options.memberLevel = JavadocMemberLevel.PACKAGE
}

test {
    // set path to outpudDir system property
    systemProperty 'org.springframework.restdocs.outputDir', snippetsDir
    // set path to javadocJsonDir system property
    systemProperty 'org.springframework.restdocs.javadocJsonDir', javadocJsonDir
    // set otput derictory by snippetsDir path
    outputs.dir snippetsDir

    dependsOn jsonDoclet
}

asciidoctor {
    // path where the asciidoc sources are
    sourceDir = file("src/main/asciidoc")
    // path where generated docs go
    outputDir = file("$buildDir/generated-docs")
    // a Map specifying different options that can be sent to Asciidoctor
    options backend: "html, pdf", doctype: "book"
    // a Map specifying various document attributes that can be sent to Asciidoctor
    attributes "source-highlighter": "highlightjs", "snippets": snippetsDir

    dependsOn test
}
//----- END Configuration Spring REST Docs

jar {
    dependsOn asciidoctor
    // put genereted file with documentation to current path
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

build.finalizedBy asciidoctor
