javaProject()

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
        classpath 'de.aaschmid:gradle-cpd-plugin:1.0'
    }
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')

    runtime('org.hsqldb:hsqldb')
    runtime('org.postgresql:postgresql')

    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

apply from: "/gradle/jacoco/jacoco.gradle"
apply from: "/gradle/checkstyle/checkstyle.gradle"
apply from: "/gradle/pmd/pmd.gradle"
apply from: "/gradle/findbugs/findbugs.gradle"
apply from: "/gradle/cpd/cpd.gradle"
apply plugin: 'eclipse-wtp'
apply plugin: 'com.palantir.docker'
apply plugin: "com.palantir.docker-run"

docker {
    name "${project.group}/${jar.baseName}:${version}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

dockerRun {
    name "${jar.baseName}"
    image "${project.group}/${jar.baseName}:${version}"
    command 'java', '-Djava.security.egd=file:/dev/./urandom', '-jar', 'app.jar'
    ports '8080'
}













