javaProject()
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: "jacoco"
checkstyle {
    toolVersion "8.8"
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}
pmd {
    toolVersion = '5.6.1'
    ignoreFailures = true
    targetJdk = '1.7'
    sourceSets = [sourceSets.main]
    reportsDir = file("${project.buildDir}/reports/pmd")
    ruleSetFiles = files("/config/pmd/pmd-ruleset.xml")
}
findbugs {
    ignoreFailures = false
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    excludeFilter = file("config/findbugs/excludeFilter.xml")
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
    }
}
jacoco {
    toolVersion = '0.7.9'
    reportsDir = file("${buildDir}/reports/jacoco/customJacocoReportDir")
}
jacocoTestReport {
    reports {
        csv.enabled = false
        xml.enabled = true
        html.destination file("${buildDir}/reports/jacoco/jacocoHtml")
    }
}
test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/reports/jacoco/jacocoTest.exec")
    }
}
test.finalizedBy jacocoTestReport

//dependencies {
//    compile('org.springframework.boot:spring-boot-starter-web')
//    compile('com.github.docker-java:docker-java:3.0.13')
//}
